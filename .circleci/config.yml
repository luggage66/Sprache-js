version: 2.1

executors:
  linux:
    resource_class: small
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/sprache
  node:
    resource_class: small
    docker:
      - image: cimg/node:lts
    working_directory: ~/sprache
    

orbs:
  node: circleci/node@2.0.0

commands:
  save-workspace:
    parameters:
      attach_path:
        type: string
        default: ~/sprache
    steps:
      - persist_to_workspace:
          root: <<parameters.attach_path>>
          paths:
            - "dist"
            - "documentation"
            - "coverage"
            - "junit.xml"
  load-workspace:
    parameters:
      attach_path:
        type: string
        default: ~/sprache
    steps:
      - checkout
      - attach_workspace:
          at: <<parameters.attach_path>>
  yarn-install:
    steps:
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-

      - run: yarn --frozen-lockfile --cache-folder ~/.cache/yarn

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
  build:
    steps:
      - run: yarn build
      - run: yarn build:docs
  test-ci:
    steps:
      - run: yarn test:ci
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: test-results

jobs:
  build:
    executor: node

    steps:
      - checkout
      - yarn-install
      - build
      - test-ci
      - save-workspace

  publish:
    executor: node

    steps:
      - load-workspace
      - yarn-install

      - run:
          name: publish
          command: yarn run semantic-release || true

  test:
    parameters:
      os:
        type: executor
      node-version:
        type: string
    executor: << parameters.os >>
    steps:
      - load-workspace
      - yarn-install
      - test-ci

workflows:
  version: 2
  build-publish:
    jobs:
      - build
      - test:
          filters:
            branches:
              only:
                - master
                - develop
          requires:
            - build
          matrix:
            parameters:
              os: [linux]
              node-version: ["10.23.0", "12.19.0", "14.15.0"]
      - publish:
          filters:
            branches:
              only:
                - master
          requires:
            - test